name: Build, Test, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          repository: 'https://github.com/tonebarbosa/cogsi-1190404-1191106-1190699.git'
          ref: 'main'

      - name: Assemble
        run: |
          cd CS02/tut-rest-gradle
          ./gradlew build

      - name: Test
        run: |
          cd CS02/tut-rest-gradle
          ./gradlew integrationTest
        env:
          JUNIT_REPORTS: '**/build/test-results/integrationTest/binary/output.bin'

      - name: Archive Test Results
        uses: actions/upload-artifact@v2
        with:
          name: junit
          path: CS02/tut-rest-gradle/app/**/build/test-results/integrationTest/binary/output.bin

      - name: Archive Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: CS02/tut-rest-gradle/build/libs/*.jar

      - name: Ask for Deployment
        input:
          message: 'Deploy to production?'

      - name: Build Docker Image
        run: |
          cd CS06/part2
          docker build -t java-app:latest \
            --build-arg JAR_PATH=${{ env.WORKSPACE }}/CS02/tut-rest-gradle/app/build/libs/app.jar \
            --build-arg JAR_PATH_RESOURCES=${{ env.WORKSPACE }}/CS02/tut-rest-gradle/app/build/resources/main/application.properties .
        env:
          WORKSPACE: ${{ github.workspace }}

      - name: Push Docker Image
        run: |
          echo "${DOCKERHUB_CREDENTIALS_ID}" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag java-app:latest ${DOCKERHUB_USERNAME}/java-app:latest
          docker push ${DOCKERHUB_USERNAME}/java-app:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_CREDENTIALS_ID: ${{ secrets.DOCKERHUB_CREDENTIALS_ID }}

      - name: Deploy Container
        run: |
          cd CS06/part2
          ansible-playbook deploy.yml -i hosts.ini --extra-vars "docker_image=java-app:latest"
        env:
          WORKSPACE: ${{ github.workspace }}

      - name: Git Tag
        run: |
          TAG_NAME="stable-v${{ github.run_number }}"
          git tag -a ${{ env.TAG_NAME }} -m "Stable build ${{ env.TAG_NAME }}"
          git push origin ${{ env.TAG_NAME }}
