Vagrant.configure("2") do |config|
  config.dns.tld = "mydomain"

  config.vm.provision "file", source: "my_vagrant_key.pub", destination: "~/.ssh/authorized_keys"
  config.ssh.private_key_path = ["my_vagrant_key", "~/.vagrant.d/insecure_private_key"]
  config.ssh.insert_key = false

  config.vm.define "db" do |db|
    db.vm.box = "bento/ubuntu-20.04"
    db.vm.hostname = "database"
    db.vm.network "private_network", type: "static", ip: "192.168.138.143"
    db.vm.network "forwarded_port", guest: 9095, host: 1570
    db.vm.network "forwarded_port", guest: 8082, host: 1523
    db.vm.synced_folder "./h2", "/home/vagrant/h2data"

    db.vm.provision "ansible" do |ansible|
        ansible.playbook = "host2_playbook.yml"
        ansible.groups = { "db" => ["host2"] }
        #ansible.inventory_path = "hosts.ini"
    end
  end

  config.vm.define "app" do |app|
    app.vm.box = "bento/ubuntu-20.04"
    app.vm.hostname = "app"
    app.vm.network "private_network", type: "static", ip: "192.168.138.144"

    app.vm.provision "ansible" do |ansible|
        ansible.playbook = "host1_playbook.yml"
        ansible.groups = { "app" => ["host1"] }
        #ansible.inventory_path = "hosts.ini"
        ansible.extra_vars = {
          "CLONE" => "true",
          "START_REST_SERVICE" => "true",
          "START_CHAT_SERVICE" => "false"
        }
      end
  end
end
